<!doctype html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width = device-width, initial-scale = 1, user-scalable = yes">
<link rel="stylesheet" type="text/css" href="style.css">
<link rel="alternate" type="application/atom+xml" title="Atom 1.0" href="feed.xml">
<title>MYAO's WEBSITE - Functions provided by Tripitaka</title>
</head>
<body>
<header id="main-header">
<h1><a href="index.htm">MYAO's WEBSITE</a></h1>
</header>
<main>
<header id="article-header">
<div id="date">2017-05-04</div>
<h2 id="title">Functions provided by Tripitaka</h2>
</header>
<div id="article-main">
<p>Tripitakaの提供する関数の簡単な説明です。 </p><h3>ready</h3><pre><code>(tripitaka:ready) </code></pre><p>後述のread-rcとset-projectを合わせたような関数。.tripitakarcファイルを読み。その一番最初の行で指定されたプロジェクトを現在のプロジェクトに設定する。 </p><h3>read-rc</h3><pre><code>(tripitaka:read-rc) </code></pre><p>.tripitakarcファイルを読みこんで、内部でプロジェクト名とそのディレクトリのリストを保持する。.tripitakarcファイルの先頭で指定されたプロジェクト名を返す。 </p><h3>set-project</h3><pre><code>(tripitaka:set-project project) </code></pre><p>引数のprojectは、projectを表す文字列。指定されたプロジェクトを現在のプロジェクトに設定する。 </p><h3>make-project</h3><pre><code>(tripitaka:set-project &amp;key name dir) </code></pre><p>キーワード引数dirが指定されなかった場合には、nameで指定された文字列に対応するプロジェクトのディレクトリ以下に、プロジェクトのために必要なディレクトリとprojectファイルを作る。dirはディレクトリを表すパスネームか文字列で、指定された場合にはそのディレクトリを作成して、プロジェクトのために必要なディレクトリとprojectファイルを作る。 </p><h3>make-dat</h3><pre><code>(tripitaka:make-dat name  
                    &amp;key (title "")  
                         (date (tripitaka::get-date-string "-"))  
                         (up "")  
                         (next "")  
                         (prev "")  
                         (id "")  
                         (text "")  
                         overwrite) </code></pre><p>それぞれの項目を指定して、nameに指定した名前の.datファイルを作る。例えば、以下のように呼ぶ。 </p><pre><code>(tripitaka:make-dat "hoge") </code></pre><p>この時は、hoge.datというファイルが、日付はYYYY-MM-DDの形式で入力された状態で、その他は空文字が入力された状態で現在のプロジェクトのdatディレクトリ直下に作られる。 </p><h3>make-html</h3><pre><code>(tripitaka:make-html name &amp;optional (tripitaka::template-name "template")) </code></pre><p>この関数は、引数nameで指定した文字列の.datファイルを使ってHTMLファイルを現在のプロジェクトのhomeディレクトリ直下に作る。オプションで使用するテンプレートファイルを選択できる。デフォルトでは現在のプロジェクトのthemeディレクトリ直下のtemplateファイル。(つまりこちらは拡張子込みでファイル名を指定する。) </p><pre><code>(tripitaka:make-html "hoge") </code></pre><p>上の例のように呼べば、hoge.datファイルから、templateファイルを使って、hoge.htmファイルを作る。 </p><h3>update-page</h3><pre><code>(tripitaka:update-page name &amp;optional (tripitaka::template-name "template")) </code></pre><p>上述のmake-htmlとほぼ同じだが、こちらはもしIDが指定されていないファイルを引数に与えたら、IDを付与する。そのため、いずれの場合でも.datファイルが保存されるので注意が必要。 </p><h3>make-new-diary</h3><pre><code>(tripitaka:make-new-diary) </code></pre><p>日記用に名前が作成する日付でYYYYMMDD(<em>N)?形式の.datファイルを作る。</em>Nの部分は連番を生成する。また、diaryという名前のファイルを日記用に使うため、:UPにdiaryを指定する。 </p><h3>update-diary</h3><pre><code>(tripitaka:update-diary &amp;optional (tripitaka::template-name "template")) </code></pre><p>tripitaka:make-new-diaryで作られた.datファイルをHTML化する。この時に、以下のことを行う。 </p><ul><li>一つ前の日記のNEXTに最新のファイルを指定する。</li><li>日記用のファイルdiary.datに現在の日記へのリンクを追加する。</li><li>一つ前の日記のページ、日記用ページ(diray.htm)、今回の日記のページをHTML化する。</li></ul><p>この関数でも、テンプレートを指定できる。 </p><h3>update-diary-with-feed</h3><pre><code>(tripitaka:update-diary-with-feed comment) </code></pre><p>commnetで指定した文字列をAtomフィードのsummary要素として日記を更新する際にAtomフィードを生成する。この時現在のプロジェクトのhomeディレクトリ直下にAtomフィードファイルfeed.xmlが生成される。また、フィードを管理するためのfeedファイルが現在のプロジェクトのディレクトリの直下に生成される。 </p><p>Atomフィードの生成のためにはprojectファイルのsite-url, site-name, authorの項目が必要です。 </p><h3>update-default-feed</h3><pre><code>(tripitaka:update-default-feed name comment) </code></pre><p>nameで指定した記事の内容で、commnetで指定した文字列をAtomフィードのsummary要素として日記を更新する際にAtomフィードを生成する。この時現在のプロジェクトのhomeディレクトリ直下にAtomフィードファイルfeed.xmlが生成される。また、フィードを管理するためのfeedファイルが現在のプロジェクトのディレクトリの直下に生成される。 </p><p>Atomフィードの生成のためにはprojectファイルのsite-url, site-name, authorの項目が必要です。 </p><h3>update-atom</h3><pre><code>(tripitaka:update-atom dat file  
                       &amp;key (title "")  
                            (link "")  
                            (id "")  
                            (updated (iso8601-time))  
                            (summary "")) </code></pre><p>datはフィードを管理する為のリストが書かれたファイル fileは吐き出すAtomフィード(xmlファイル)のパスをそれぞれ指定する。id title link update summaryの各項目を指定して、指定したAtomフィードを更新する。同じidのエントリがすでに存在した場合にはそのエントリを更新する。同じidのエントリがない場合には、エントリを追加する。updateはデフォルトではiso8601の形で現在時刻を設定する。 </p>
</div>
<footer id="article-footer">
UP: <a href="tripitaka.htm">Intoroduction of Tripitaka</a>
PREV: <a href="tripitaka-4.htm">Syntax and Rule of template files for Tripitaka</a>
NEXT: <a href=".htm"><tri:page prop="title" name=""></a>
</footer>
</main>
<footer id="main-footer">
<div id="icons"><a href="feed.xml"><img src="img/feed.png" alt="feed.xml" class="icon-img"></a>
<a href="https://twitter.com/myao_s_moking"><img src="img/twit.png" alt="https://twitter.com/myao_s_moking" class="icon-img"></a>
<a href="https://github.com/myaosato"><img src="img/github.png" alt="https://twitter.com/myaosato" class="icon-img"></a>
</div>
<div id="copyright">&copy; 2010 Satoaki Miyao</div>
</footer>
</body>
</html>